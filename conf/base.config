/* enable singularity and have it do automounts */
singularity.enabled = true
singularity.autoMounts = true

// the parameter case translation hasn't happened yet at this
// point in the config reading/parsing, so we'll have to handle it
// ourselves if we want consisistency. what we'll do is give the
// kebab-case version priority

// convert string to camelCase
def to_camel(s) {
  return s.replaceAll(/(?<small>[a-z])-(?<big>[a-z])/) {
    m,a,b -> a+b.toUpperCase()
  }
}

// convert string to kebab-case
def to_kebab(s) {
  return s.replaceAll(/([a-z])([A-Z])/,'$1-$2').toLowerCase()
}

def get_p(p,k) {
  if (p.containsKey(to_kebab(k))) {
    return p.get(to_kebab(k))
  } else {
    return p.get(k)
  }
}

/*
 * parse out singularity bind directories
 * we have to check params['xxx-yyy'] because the case
 * translation hasn't happened yet (where does it happen?)
*/

String bd = get_p(params,'bindDir')
String sc = get_p(params,'singularityCache')

// construct options for singularity cache bind directories
if (bd && bd != '') {
  singularity.runOptions = "-B " + bd.split().join(" -B ")
}

// set singularity cache directory if specified
if (sc && sc != "") {
  singularity.cacheDir = sc
}

/*
 * general process options (mainly which labels go with which docker/singulariy images)
 * but also the base resource usage settings
*/
process {
  withLabel: 'fastqc'           { container = 'docker://biocontainers/fastqc:v0.11.9_cv7' }
  withLabel: 'adapterRemoval'   { container = 'docker://biocontainers/adapterremoval:v2.2.0-1-deb_cv1' }
  withLabel: 'obitools'         { container = 'quay.io/biocontainers/obitools:1.2.11--py27_1' }
  withLabel: 'usearch'          { container = 'docker://sunqiangkun/usearch:v1' }
  withLabel: 'vsearch'          { container = 'docker://biocontainers/vsearch:v2.10.4-1-deb_cv1' }
  withLabel: 'blast'            { container = 'docker://ncbi/blast:latest'  }
  withLabel: 'lulu'             { container = 'docker://index.docker.io/mahsamousavi/lulu:2019' }
  withLabel: 'lca_python3'      { container = 'docker://python:3.6'}
  withLabel: 'multiqc'          { container = 'docker://quay.io/biocontainers/multiqc:1.14--pyhdfd78af_0'}
  withLabel: 'insect'           { container = 'docker://mahsamousavi/insect:2019'}

  cache = 'lenient' 

  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 6.GB * task.attempt, 'memory' ) }
  time = { check_max( 4.h * task.attempt, 'time' ) }
}
